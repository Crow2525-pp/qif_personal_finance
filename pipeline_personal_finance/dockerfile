# Use an official Python runtime as a parent image
FROM python:3.11

ARG DAGSTER_APP


ENV YOUR_ENV=${YOUR_ENV} \
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # Poetry's configuration:
  POETRY_NO_INTERACTION=1 \
  POETRY_VIRTUALENVS_CREATE=false \
  POETRY_CACHE_DIR='/var/cache/pypoetry' \
  POETRY_HOME='/usr/local' \
  POETRY_VERSION=1.8.4 \
  # ^^^
  # Make sure to update it!
  DAGSTER_APP=${DAGSTER_APP:-appnotset}
  

# Set the working directory in the Docker image
WORKDIR ${DAGSTER_APP}/pipeline_personal_finance

# Install the required dependencies
RUN curl -sSL https://install.python-poetry.org | python3 -
COPY poetry.lock pyproject.toml ./

RUN poetry install --only=main --no-interaction --no-ansi

RUN poetry run pip list

# Copy the application code to the working directory
COPY . .

# Set the working directory to dbt dir to build the script
WORKDIR ${DAGSTER_APP}/pipeline_personal_finance/dbt_finance

# Set the full project directory path for dbt commands
# RUN poetry run dbt clean
RUN poetry run dbt deps
# RUN poetry run dbt compile

# Set the working directory to where the service needs to be started from
WORKDIR ${DAGSTER_APP}

# Expose the port that Dagster gRPC server uses
EXPOSE 4000

RUN chmod -R +x ${DAGSTER_APP}

# Command to run the Dagster gRPC server
CMD ["dagster", "api", "grpc", "-h", "0.0.0.0", "-p", "4000", "-m", "pipeline_personal_finance"]
