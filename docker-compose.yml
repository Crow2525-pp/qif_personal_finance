services:
  dagster_webserver:
    build:
      context: .
      dockerfile: ./dagster_core/dockerfile
      args:
        - DAGSTER_APP=${DAGSTER_APP}
        - DAGSTER_HOME=${DAGSTER_HOME}
    entrypoint:
      - dagster-webserver
      - --host
      - "0.0.0.0"
      - --port
      - "3000"
      - --workspace
      - "${DAGSTER_HOME}/workspace.yaml"
    container_name: dagster_webserver
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      DAGSTER_POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
      DAGSTER_POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_PORT: ${DAGSTER_POSTGRES_PORT}
      DAGSTER_POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - pipeline_personal_finance
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    env_file:
      - .env

  dagster_daemon:
    build:
      context: .
      dockerfile: ./dagster_core/dockerfile
      args:
        DAGSTER_APP: ${DAGSTER_APP}
        DAGSTER_HOME: ${DAGSTER_HOME}
    entrypoint:
      - dagster-daemon
      - run
      - --workspace
      - "${DAGSTER_HOME}/workspace.yaml"
    # expose:
    #   - "4000"
    # ports:
    #   - "4000:4000"
    container_name: dagster_daemon
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
      DAGSTER_POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_PORT: ${DAGSTER_POSTGRES_PORT}
      DAGSTER_POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      DAGSTER_HOME: ${DAGSTER_HOME}
      DAGSTER_APP: ${DAGSTER_APP}
    # no use on windows.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:${DAGSTER_HOME}/io_manager_storage
    networks:
      - dagster_network
    depends_on:
      - dagster_postgres
      - pipeline_personal_finance
    env_file:
      - .env

  pipeline_personal_finance:
    container_name: pipeline_personal_finance
    build:
      context: .
      dockerfile: ./pipeline_personal_finance/dockerfile
      args:
        - DAGSTER_APP=${DAGSTER_APP}
    image: pipeline_personal_finance
    environment:
      TIMEZONE: Australia/Melbourne
      DAGSTER_CURRENT_IMAGE: pipeline_personal_finance
      DAGSTER_POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
      DAGSTER_POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_PORT: ${DAGSTER_POSTGRES_PORT}
      DAGSTER_POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      DBT_PROJECT_DIR: ${DBT_PROJECT_DIR}
      DBT_PROFILES_DIR: ${DBT_PROJECT_DIR}
      DAGSTER_DEPLOYMENT: ${DAGSTER_DEPLOYMENT}
    volumes:
      - /tmp/dagster-data:/tmp/dagster-data
    networks:
      - dagster_network
    # ports:
    #   - "5678:5678"
    env_file:
      - .env
    # entrypoint: python
    # command:
    #   - -m
    #   - debugpy
    #   - --listen
    #   - 0.0.0.0:5678
    #   - -m
    #   - dagster
    #   - code-server
    #   - start
    #   - -h
    #   - 0.0.0.0
    #   - -p
    #   - "4000"
    #   - -m
    #   - defs

  dagster_postgres:
    build:
      context: ./postgres_custom
      dockerfile: dockerfile
    shm_size: 128mb
    restart: on-failure
    container_name: dagster_postgres
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      GRAFANA_USER: ${GRAFANA_USER}
      GRAFANA_PASSWORD: ${GRAFANA_PASSWORD}
      PGDATA: /var/lib/postgresql/data/personal_finance/
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data/
    networks:
      - dagster_network
    env_file:
      - .env

networks:
  dagster_network:
    driver: bridge
    name: dagster_network
