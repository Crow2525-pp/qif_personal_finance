# ./dockerfile

FROM ghcr.io/astral-sh/uv:python3.11-bookworm-slim

ENV YOUR_ENV=${YOUR_ENV} \
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  # Copy from the cache instead of linking since it's a mounted volume
  UV_LINK_MODE=copy \ 
  # Enable bytecode compilation
  UV_COMPILE_BYTECODE=1 \ 
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  PATH="/.venv/bin:$PATH"


COPY uv.lock uv.lock
COPY pyproject.toml pyproject.toml
COPY dagster_core/pyproject.toml dagster_core/pyproject.toml

# RUN rm /var/lib/postgresql/data
ARG DAGSTER_HOME
ARG DAGSTER_APP

ENV DAGSTER_HOME=${DAGSTER_HOME:-homenotset}
ENV DAGSTER_APP=${DAGSTER_APP:-appnotset}

WORKDIR ${DAGSTER_APP}

# Create Dagster home directory
# Install the project's dependencies using the lockfile and settings

RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --package dagster_core

# Create application directory
RUN mkdir -p ${DAGSTER_HOME}

COPY dagster_core/workspace.yaml dagster_core/dagster.yaml  ${DAGSTER_HOME}

RUN uv pip list

RUN chmod -R +x ${DAGSTER_HOME}/
RUN chmod -R +x ${DAGSTER_APP}/

# Verify setup
RUN echo "Verifying paths:" && \
    echo "DAGSTER_HOME=${DAGSTER_HOME}" && \
    echo "DAGSTER_APP=${DAGSTER_APP}" && \
    ls -la ${DAGSTER_HOME}

    # Verify setup and files

RUN echo "Verifying paths:" && \
    echo "DAGSTER_HOME=${DAGSTER_HOME}" && \
    echo "DAGSTER_APP=${DAGSTER_APP}" && \
    ls -la ${DAGSTER_HOME} && \
    echo "Verifying config files:" && \
    test -f ${DAGSTER_HOME}/workspace.yaml || (echo "workspace.yaml missing" && exit 1) && \
    test -f ${DAGSTER_HOME}/dagster.yaml || (echo "dagster.yaml missing" && exit 1) && \
    echo "Config file contents:" && \
    cat ${DAGSTER_HOME}/workspace.yaml && \
    cat ${DAGSTER_HOME}/dagster.yaml
