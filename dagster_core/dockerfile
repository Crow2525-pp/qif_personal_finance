# ./dockerfile

FROM ghcr.io/astral-sh/uv:python3.11-bookworm-slim

# RUN rm /var/lib/postgresql/data
ARG DAGSTER_HOME
ARG DAGSTER_APP

ENV YOUR_ENV=${YOUR_ENV} \
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  # Copy from the cache instead of linking since it's a mounted volume
  UV_LINK_MODE=copy \ 
  # Enable bytecode compilation
  UV_COMPILE_BYTECODE=1 \ 
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # This enables UV to run its env.
  PATH="${DAGSTER_APP}/.venv/bin:$PATH" \
  DAGSTER_HOME=${DAGSTER_HOME:-homenotset} \
  DAGSTER_APP=${DAGSTER_APP:-appnotset}

WORKDIR ${DAGSTER_APP}

# context is in root dir and dockerignore ensures only req. files are vis.
COPY uv.lock uv.lock
# not sure if I need both pyproject.toml files or just core.
COPY pyproject.toml pyproject.toml
COPY dagster_core/pyproject.toml dagster_core/pyproject.toml

# Creates and syncs env; frozen ensures that no updates happen
# Package sorts out just the sub-project's deps.
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --package dagster_core

RUN mkdir -p ${DAGSTER_HOME}

COPY dagster_core/workspace.yaml dagster_core/dagster.yaml  ${DAGSTER_HOME}

RUN chmod -R +x ${DAGSTER_HOME}/
RUN chmod -R +x ${DAGSTER_APP}/

# Add entrypoint here for consistency.